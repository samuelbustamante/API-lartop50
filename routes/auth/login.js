// Generated by CoffeeScript 1.3.3
(function() {
  var auth, client, keys, md5, redis;

  md5 = require("MD5");

  auth = require("./auth");

  keys = require("./keys");

  redis = require("redis");

  client = redis.createClient();

  exports.create = function(req, res) {
    var email, errors, password;
    req.assert("email").isEmail();
    req.assert("password").notEmpty();
    errors = req.validationErrors();
    if (errors) {
      res.json({
        message: "invalid parameters",
        errors: errors
      }, 400);
      return;
    }
    email = req.body.email;
    password = req.body.password;
    return client.GET(keys.user(email), function(error, uid) {
      if (error) {
        res.json({
          message: "internal error"
        }, 500);
        return;
      }
      if (!uid) {
        res.json({
          message: "user not found"
        }, 404);
        return;
      }
      return client.GET(keys.active(uid), function(error, active) {
        if (error) {
          res.json({
            message: "internal error"
          }, 500);
          return;
        }
        if (active !== "true") {
          res.json({
            message: "user not active"
          }, 404);
          return;
        }
        return client.GET(keys.password(uid), function(error, realpass) {
          if (error) {
            res.json({
              message: "internal error"
            }, 500);
            return;
          }
          if (md5(password) === realpass) {
            auth.login(req, uid);
            return res.json({
              message: "successful login"
            }, 200);
          } else {
            return res.json({
              message: "invalid password"
            }, 404);
          }
        });
      });
    });
  };

}).call(this);
