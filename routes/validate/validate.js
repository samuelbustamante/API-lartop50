// Generated by CoffeeScript 1.3.3
(function() {

  module.exports = {
    validators: {
      alpha: function(str) {
        return str.match(/^[a-zA-Z ]{1,64}$/);
      },
      numeric: function(str) {
        return str.match(/^[0-9]{1,15}$/);
      },
      integer: function(str) {
        return this.numeric(str);
      },
      alphanumeric: function(str) {
        return str.match(/^[a-zA-Z0-9 ]{1,64}$/);
      },
      char: function(str) {
        return this.alphanumeric(str);
      },
      text: function(str) {
        return str.match(/^[a-zA-Z0-9 ]{1,250}$/);
      },
      url: function(str) {
        return str.match(/(http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?/);
      },
      md5: function(str) {
        return str.match(/^[0-9a-z]{32}$/);
      },
      email: function(str) {
        return str.match(/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$/);
      },
      password: function(str) {
        return str.match(/(?!^[0-9]*$)(?!^[a-zA-Z]*$)^([a-zA-Z0-9]{6,12})$/);
      }
    },
    validate: function(options, values) {
      var data, option, _i, _len;
      data = {};
      for (_i = 0, _len = options.length; _i < _len; _i++) {
        option = options[_i];
        if (!values[option[0]]) {
          return null;
        }
        if (this.validators[option[1]](values[option[0]])) {
          data[option[0]] = values[option[0]];
        } else {
          return null;
        }
      }
      return data;
    }
  };

}).call(this);
